server.port=8081

spring.neo4j.uri=neo4j+s://2b1e89e8.databases.neo4j.io
spring.neo4j.authentication.username=neo4j
spring.neo4j.authentication.password=m5Zs6kWqSzeIHS28VtC-C9x1dYBe8xDflVR_BTPRWIY

spring.kafka.bootstrap-servers=localhost:19092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Desativa o uso de headers para informa��es de tipo
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Define o tipo padr�o para deserializa��o
spring.kafka.consumer.properties.spring.json.value.default.type=com.moots.api_post.event.UserEvent


# Redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password= //opcional

# Security
security.config.prefix=Bearer
security.config.key=SECRET_KEY
security.config.expiration=3600000

# Redis cache
spring.redis.host=localhost
spring.redis.port=6380
spring.cache.type=redis